{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport pay from \"@/components/AppPay.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"AppUser\",\n  components: {\n    pay\n  },\n  data() {\n    return {\n      showRecharge: false,\n      name: '',\n      NAME: '',\n      BALANCE: '',\n      USERID: '',\n      PASSWORD: '',\n      userchoseshow: '',\n      images: [],\n      usechose: {\n        t1: '',\n        t2: '',\n        t3: ''\n      }\n    };\n  },\n  mounted() {\n    // 在组件加载时自动执行的函数\n    this.yourFunction();\n    this.NAME = sessionStorage.getItem('NAME');\n    this.USERID = sessionStorage.getItem('USERID');\n    this.BALANCE = sessionStorage.getItem('BALANCE');\n    this.PASSWORD = sessionStorage.getItem('PASSWORD');\n    this.userchoseshow = sessionStorage.getItem('USERCHOSE');\n    sessionStorage.setItem('SEARCHTYPE', '');\n    console.log(this.NAME);\n    console.log(this.USERID);\n    console.log(this.PASSWORD);\n    console.log(this.BALANCE);\n    this.postImageName();\n    this.usechose = {\n      t1: '',\n      t2: '',\n      t3: ''\n    };\n    if (this.userchoseshow == 'myup') {\n      this.usechose.t1 = 'cho';\n    }\n    if (this.userchoseshow == 'mybuy') {\n      this.usechose.t2 = 'cho';\n    }\n    if (this.userchoseshow == 'myload') {\n      this.usechose.t3 = 'cho';\n    }\n  },\n  methods: {\n    myupchose() {\n      sessionStorage.setItem('USERCHOSE', 'myup');\n      location.reload();\n    },\n    mybuychose() {\n      sessionStorage.setItem('USERCHOSE', 'mybuy');\n      location.reload();\n    },\n    myloadchose() {\n      sessionStorage.setItem('USERCHOSE', 'myload');\n      location.reload();\n    },\n    showRechargeBox() {\n      //显示充值\n      this.showRecharge = true;\n    },\n    tologin() {\n      sessionStorage.setItem('NAME', '');\n      sessionStorage.setItem('USERID', '');\n      sessionStorage.setItem('BALANCE', '');\n      sessionStorage.setItem('PASSWORD', '');\n      this.$router.push(\"/\");\n    },\n    yourFunction() {\n      console.log(\"hhhhh\");\n    },\n    toindex() {\n      this.$router.push(\"/index\");\n    },\n    refresh() {\n      location.reload();\n    },\n    toupload() {\n      this.$router.push(\"/upload\");\n    },\n    topay() {\n      this.$router.push(\"/pay\");\n    },\n    async postImageName() {\n      let vwallpaper = {\n        vwpId: '',\n        name: '',\n        createId: '',\n        price: '',\n        type: '',\n        path: ''\n      };\n      try {\n        //使用axios发送一个GET请求，假设后端有一个接口可以返回图片的文件名\n        let response = await axios.post(\"http://localhost:8090/vwallpaper/getImagesByTypeAndName\", vwallpaper);\n        //如果请求成功，将文件名保存到imageName属性中\n        if (response.status === 200) {\n          console.log(response.data);\n          console.log(this.imageName);\n          let i = 0;\n          while (response.data.data[i] && response.data.data[i].path != null) {\n            this.imageNames.push(response.data.data[i].path);\n            this.imageID.push(response.data.data[i].vwpId);\n            this.images.push({\n              imageNames: response.data.data[i].path,\n              imageID: response.data.data[i].vwpId\n            });\n            i++;\n          }\n        }\n      } catch (error) {\n        //如果请求失败，打印错误信息\n        console.error(error);\n      }\n    },\n    getImageUrl(imageName) {\n      return `http://localhost:8090/vwallpaper/ShowPicture?filepath=${imageName}`;\n    }\n  }\n};","map":{"version":3,"names":["pay","axios","name","components","data","showRecharge","NAME","BALANCE","USERID","PASSWORD","userchoseshow","images","usechose","t1","t2","t3","mounted","yourFunction","sessionStorage","getItem","setItem","console","log","postImageName","methods","myupchose","location","reload","mybuychose","myloadchose","showRechargeBox","tologin","$router","push","toindex","refresh","toupload","topay","vwallpaper","vwpId","createId","price","type","path","response","post","status","imageName","i","imageNames","imageID","error","getImageUrl"],"sources":["src/components/AppUser.vue"],"sourcesContent":["<!--<template>-->\r\n<!--    <div class=\"container\">-->\r\n<!--        <div class=\"header\">-->\r\n<!--            <div class=\"logo\">壁纸引擎&#45;&#45;用户</div>-->\r\n<!--            <div class=\"nav\">-->\r\n<!--                <button @click=\"toindex\">首页</button>-->\r\n<!--                <button>分类</button>-->\r\n<!--                <button @click=\"toupload\">上传</button>-->\r\n<!--                <div class=\"userimgbox\">-->\r\n<!--                    <img src=\"../assets/tou1.jpg\" alt=\"\" width=\"25\" @click=\"refresh\">-->\r\n<!--                    <div>{{ this.NAME }}</div>-->\r\n<!--                </div>-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n\r\n<!--        <div class=\"paybox\">-->\r\n<!--          <pay v-if=\"showRecharge\" />-->\r\n<!--        </div>-->\r\n<!--        <div class=\"profile\">-->\r\n<!--            <img src=\"https://picsum.photos/100/100?random=1\">-->\r\n<!--            <div class=\"profile-info\">-->\r\n<!--                <p>用户名: <span>{{ this.NAME }}</span></p>-->\r\n<!--                <p>账号: <span>{{ this.USERID }}</span></p>-->\r\n<!--                <p>余额: <span>￥{{ this.BALANCE }}</span></p>-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n<!--        <div class=\"tabs\">-->\r\n<!--            <button class=\"active\">我上传的壁纸</button>-->\r\n<!--            <button class=\"active\">我下载的壁纸</button>-->\r\n<!--            <button class=\"active\" @click=\"toupload\">上传壁纸</button>-->\r\n<!--            <button class=\"active\" @click=\"showRechargeBox\">充值</button>-->\r\n<!--            <button class=\"active\" @click=\"tologin\">退出登录</button>-->\r\n<!--        </div>-->\r\n<!--        <div class=\"content\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=2\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=3\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=4\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=5\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=6\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=7\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=8\">-->\r\n<!--            <img src=\"https://picsum.photos/300/200?random=9\">-->\r\n<!--        </div>-->\r\n\r\n<!--        <div class=\"footer\">-->\r\n<!--            <p>© 2023 壁纸引擎. All rights reserved.</p>-->\r\n<!--        </div>-->\r\n<!--    </div>-->\r\n<!--</template>-->\r\n<!--  -->\r\n<!--<script>-->\r\n\r\n\r\n<!--import pay from \"@/components/AppPay.vue\";-->\r\n\r\n<!--export default {-->\r\n<!--    name: \"AppUser\",-->\r\n<!--    components: {pay,},-->\r\n<!--    data() {-->\r\n<!--        return {-->\r\n<!--            showRecharge: false,-->\r\n<!--            name: '',-->\r\n<!--            NAME:'',-->\r\n<!--            BALANCE:'',-->\r\n<!--            USERID:'',-->\r\n<!--            PASSWORD:'',-->\r\n<!--        }-->\r\n<!--    },-->\r\n<!--    mounted() {-->\r\n<!--        // 在组件加载时自动执行的函数-->\r\n<!--        this.yourFunction();-->\r\n<!--        this.NAME=sessionStorage.getItem('NAME')-->\r\n<!--        this.USERID=sessionStorage.getItem('USERID')-->\r\n<!--        this.BALANCE=sessionStorage.getItem('BALANCE')-->\r\n<!--        this.PASSWORD=sessionStorage.getItem('PASSWORD')-->\r\n<!--        sessionStorage.setItem('SEARCHTYPE', '')-->\r\n<!--        console.log(this.NAME)-->\r\n<!--        console.log(this.USERID)-->\r\n<!--        console.log(this.PASSWORD)-->\r\n<!--        console.log(this.BALANCE)-->\r\n<!--    },-->\r\n<!--    methods: {-->\r\n<!--        showRechargeBox() {    //显示充值-->\r\n<!--          this.showRecharge = true;-->\r\n<!--        },-->\r\n<!--        tologin(){-->\r\n<!--          sessionStorage.setItem('NAME', '')-->\r\n<!--          sessionStorage.setItem('USERID', '')-->\r\n<!--          sessionStorage.setItem('BALANCE', '')-->\r\n<!--          sessionStorage.setItem('PASSWORD', '')-->\r\n<!--          this.$router.push(\"/\");-->\r\n<!--        },-->\r\n<!--        yourFunction() {-->\r\n<!--            console.log(\"hhhhh\");-->\r\n<!--        },-->\r\n<!--        toindex() {-->\r\n<!--            this.$router.push(\"/index\");-->\r\n<!--        },-->\r\n<!--        refresh() {-->\r\n<!--            location.reload();-->\r\n<!--        },-->\r\n<!--        toupload() {-->\r\n<!--            this.$router.push(\"/upload\");-->\r\n<!--        },-->\r\n<!--        topay(){-->\r\n<!--          this.$router.push(\"/pay\");-->\r\n<!--        }-->\r\n<!--    }-->\r\n<!--}-->\r\n\r\n<!--</script>-->\r\n<!--  -->\r\n<!--<style scoped>-->\r\n<!--body {-->\r\n<!--    background-color: #f0f0f0;-->\r\n<!--    font-family: Arial, sans-serif;-->\r\n<!--}-->\r\n<!--.paybox{-->\r\n<!--  position: fixed;-->\r\n<!--  top: 50%;-->\r\n<!--  left: 50%;-->\r\n<!--  transform: translate(-50%, -50%);-->\r\n<!--  padding: 20px;-->\r\n<!--  z-index: 1000; /* 设置层叠顺序，确保它在其他内容之上 */-->\r\n<!--}-->\r\n<!--.container {-->\r\n<!--    width: 80%;-->\r\n<!--    margin: 0 auto;-->\r\n<!--}-->\r\n\r\n<!--.header {-->\r\n<!--    display: flex;-->\r\n<!--    align-items: center;-->\r\n<!--    justify-content: space-between;-->\r\n<!--    padding: 20px;-->\r\n<!--}-->\r\n\r\n<!--.logo {-->\r\n<!--    font-size: 32px;-->\r\n<!--    font-weight: bold;-->\r\n<!--    color: #333333;-->\r\n<!--}-->\r\n\r\n<!--.nav {-->\r\n<!--    display: flex;-->\r\n<!--    gap: 20px;-->\r\n<!--}-->\r\n\r\n<!--.nav img:hover {-->\r\n<!--    cursor: pointer;-->\r\n<!--}-->\r\n\r\n<!--.nav button {-->\r\n<!--    text-decoration: none;-->\r\n<!--    color: #333333;-->\r\n<!--    font-size: 16px;-->\r\n<!--    border: none;-->\r\n<!--    background-color: rgba(255, 255, 255, 0);-->\r\n<!--}-->\r\n\r\n<!--.nav button:hover {-->\r\n<!--    color: #0099ff;-->\r\n<!--    cursor: pointer;-->\r\n<!--}-->\r\n\r\n<!--.profile {-->\r\n<!--    display: flex;-->\r\n<!--    align-items: center;-->\r\n<!--    gap: 20px;-->\r\n<!--    margin-top: 20px;-->\r\n<!--}-->\r\n\r\n<!--.profile img {-->\r\n<!--    width: 100px;-->\r\n<!--    height: 100px;-->\r\n<!--    border-radius: 50%;-->\r\n<!--    object-fit: cover;-->\r\n<!--}-->\r\n\r\n<!--.profile-info {-->\r\n<!--    display: flex;-->\r\n<!--    flex-direction: column;-->\r\n<!--    gap: 10px;-->\r\n<!--}-->\r\n\r\n<!--.profile-info p {-->\r\n<!--    font-size: 16px;-->\r\n<!--    color: #333333;-->\r\n<!--}-->\r\n\r\n<!--.profile-info span {-->\r\n<!--    font-weight: bold;-->\r\n<!--}-->\r\n\r\n<!--.tabs {-->\r\n<!--    display: flex;-->\r\n<!--    align-items: center;-->\r\n<!--    gap: 20px;-->\r\n<!--    margin-top: 20px;-->\r\n<!--}-->\r\n\r\n<!--.tabs button {-->\r\n<!--    cursor: pointer;-->\r\n<!--    display: block;-->\r\n<!--    width: 150px;-->\r\n<!--    height: 40px;-->\r\n<!--    line-height: 40px;-->\r\n<!--    text-align: center;-->\r\n<!--    text-decoration: none;-->\r\n<!--    color: #333333;-->\r\n<!--    font-size: 16px;-->\r\n<!--    border: 1px solid #cccccc;-->\r\n<!--    border-radius: 20px;-->\r\n<!--}-->\r\n\r\n<!--.tabs button.active {-->\r\n<!--    background-color: #0099ff;-->\r\n<!--    color: white;-->\r\n<!--}-->\r\n\r\n<!--.tabs button:hover {-->\r\n<!--    background-color: #0066cc;-->\r\n<!--}-->\r\n\r\n<!--.content {-->\r\n<!--    display: grid;-->\r\n<!--    grid-template-columns: repeat(4, 1fr);-->\r\n<!--    grid-gap: 20px;-->\r\n<!--    margin-top: 20px;-->\r\n<!--}-->\r\n\r\n<!--.content img {-->\r\n<!--    width: 100%;-->\r\n<!--    height: 200px;-->\r\n<!--    object-fit: cover;-->\r\n<!--}-->\r\n\r\n<!--.content img:hover {-->\r\n<!--    opacity: 0.8;-->\r\n<!--}-->\r\n\r\n<!--.upload {-->\r\n<!--    display: flex;-->\r\n<!--    align-items: center;-->\r\n<!--    justify-content: center;-->\r\n<!--    margin-top: 20px;-->\r\n<!--}-->\r\n\r\n<!--.upload button {-->\r\n<!--    width: 100px;-->\r\n<!--    height: 40px;-->\r\n<!--    border: none;-->\r\n<!--    border-radius: 20px;-->\r\n<!--    background-color: #0099ff;-->\r\n<!--    color: white;-->\r\n<!--    font-size: 16px;-->\r\n<!--}-->\r\n\r\n<!--.upload button:hover {-->\r\n<!--    background-color: #0066cc;-->\r\n<!--}-->\r\n\r\n<!--.footer {-->\r\n<!--    display: flex;-->\r\n<!--    align-items: center;-->\r\n<!--    justify-content: center;-->\r\n<!--    padding: 20px;-->\r\n<!--}-->\r\n\r\n<!--.footer p {-->\r\n<!--    font-size: 14px;-->\r\n<!--    color: #999999;-->\r\n<!--}-->\r\n\r\n<!--.updata {-->\r\n<!--    align-items: center;-->\r\n<!--    text-align: center;-->\r\n<!--    margin: 0 auto;-->\r\n<!--    width: 100px;-->\r\n<!--    height: 40px;-->\r\n<!--    border: none;-->\r\n<!--    border-radius: 20px;-->\r\n<!--    background-color: #0099ff;-->\r\n<!--    color: white;-->\r\n<!--    font-size: 16px;-->\r\n<!--}-->\r\n\r\n<!--.userimgbox {-->\r\n<!--    margin-top: 20px;-->\r\n<!--}-->\r\n<!--</style>-->\r\n<!--  -->\r\n<!-- -->\r\n\r\n\r\n<template>\r\n  <div class=\"container\">\r\n    <div class=\"header\">\r\n      <div class=\"logo\">壁纸引擎--用户</div>\r\n      <div class=\"nav\">\r\n        <button @click=\"toindex\">首页</button>\r\n        <button>分类</button>\r\n        <button @click=\"toupload\">上传</button>\r\n        <div class=\"userimgbox\">\r\n          <img src=\"../assets/tou1.jpg\" alt=\"\" width=\"25\" @click=\"refresh\">\r\n          <div>{{ this.NAME }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"paybox\">\r\n      <pay v-if=\"showRecharge\" />\r\n    </div>\r\n    <div class=\"profile\">\r\n      <img src=\"https://picsum.photos/100/100?random=1\">\r\n      <div class=\"profile-info\">\r\n        <p>用户名: <span>{{ this.NAME }}</span></p>\r\n        <p>账号: <span>{{ this.USERID }}</span></p>\r\n        <p>余额: <span>￥{{ this.BALANCE }}</span></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"tabs\">\r\n      <button :class=\"this.usechose.t1\" @click=\"myupchose\">我上传的壁纸</button>\r\n      <button :class=\"this.usechose.t2\" @click=\"mybuychose\">我购买的壁纸</button>\r\n      <button :class=\"this.usechose.t3\" @click=\"myloadchose\">我下载的壁纸</button>\r\n      <button class=\"active\" @click=\"toupload\">上传壁纸</button>\r\n      <button class=\"active\" @click=\"showRechargeBox\">充值</button>\r\n      <button class=\"active\" @click=\"tologin\">退出登录</button>\r\n    </div>\r\n    <div class=\"imggallery\">\r\n      <div class=\"image-viewer\">\r\n        <el-image class=\"image-style\" v-for=\"(aimage, index) in images\" :key=\"index\" :src=\"getImageUrl(aimage.imageNames)\" fit=\"contain\" @click=\"topicture(getImageUrl(aimage.imageNames),aimage.imageID)\"></el-image>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>© 2023 壁纸引擎. All rights reserved.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport pay from \"@/components/AppPay.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AppUser\",\r\n  components: {pay,},\r\n  data() {\r\n    return {\r\n      showRecharge: false,\r\n      name: '',\r\n      NAME:'',\r\n      BALANCE:'',\r\n      USERID:'',\r\n      PASSWORD:'',\r\n      userchoseshow:'',\r\n      images:[],\r\n      usechose: {\r\n        t1:'',\r\n        t2:'',\r\n        t3:'',\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 在组件加载时自动执行的函数\r\n    this.yourFunction();\r\n    this.NAME=sessionStorage.getItem('NAME')\r\n    this.USERID=sessionStorage.getItem('USERID')\r\n    this.BALANCE=sessionStorage.getItem('BALANCE')\r\n    this.PASSWORD=sessionStorage.getItem('PASSWORD')\r\n    this.userchoseshow=sessionStorage.getItem('USERCHOSE')\r\n    sessionStorage.setItem('SEARCHTYPE', '')\r\n    console.log(this.NAME)\r\n    console.log(this.USERID)\r\n    console.log(this.PASSWORD)\r\n    console.log(this.BALANCE)\r\n    this.postImageName();\r\n    this.usechose={\r\n      t1:'',\r\n      t2:'',\r\n      t3:'',\r\n    }\r\n    if(this.userchoseshow=='myup')\r\n    {this.usechose.t1='cho'}\r\n    if(this.userchoseshow=='mybuy')\r\n    {this.usechose.t2='cho'}\r\n    if(this.userchoseshow=='myload')\r\n    {this.usechose.t3='cho'}\r\n\r\n  },\r\n  methods: {\r\n    myupchose(){\r\n      sessionStorage.setItem('USERCHOSE', 'myup');\r\n      location.reload();\r\n    },\r\n    mybuychose(){\r\n      sessionStorage.setItem('USERCHOSE', 'mybuy');\r\n      location.reload();\r\n    },\r\n    myloadchose(){\r\n      sessionStorage.setItem('USERCHOSE', 'myload');\r\n      location.reload();\r\n    },\r\n    showRechargeBox() {    //显示充值\r\n      this.showRecharge = true;\r\n    },\r\n    tologin(){\r\n      sessionStorage.setItem('NAME', '')\r\n      sessionStorage.setItem('USERID', '')\r\n      sessionStorage.setItem('BALANCE', '')\r\n      sessionStorage.setItem('PASSWORD', '')\r\n      this.$router.push(\"/\");\r\n    },\r\n    yourFunction() {\r\n      console.log(\"hhhhh\");\r\n    },\r\n    toindex() {\r\n      this.$router.push(\"/index\");\r\n    },\r\n    refresh() {\r\n      location.reload();\r\n    },\r\n    toupload() {\r\n      this.$router.push(\"/upload\");\r\n    },\r\n    topay(){\r\n      this.$router.push(\"/pay\");\r\n    },\r\n    async postImageName() {\r\n      let vwallpaper = {\r\n\r\n        vwpId:'' ,\r\n        name:'',\r\n        createId:'',\r\n        price:'',\r\n        type:'',\r\n        path:'',\r\n\r\n      };\r\n      try {\r\n        //使用axios发送一个GET请求，假设后端有一个接口可以返回图片的文件名\r\n        let response = await axios.post(\"http://localhost:8090/vwallpaper/getImagesByTypeAndName\",vwallpaper);\r\n        //如果请求成功，将文件名保存到imageName属性中\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          console.log(this.imageName);\r\n          let i=0;\r\n          while(response.data.data[i] && response.data.data[i].path!=null){\r\n            this.imageNames.push(response.data.data[i].path);\r\n            this.imageID.push(response.data.data[i].vwpId);\r\n            this.images.push({imageNames:response.data.data[i].path,imageID:response.data.data[i].vwpId})\r\n            i++;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        //如果请求失败，打印错误信息\r\n        console.error(error);\r\n      }\r\n    },\r\n    getImageUrl(imageName) {\r\n      return `http://localhost:8090/vwallpaper/ShowPicture?filepath=${imageName}`;\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  background-color: #f0f0f0;\r\n  font-family: Arial, sans-serif;\r\n}\r\n.paybox{\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  z-index: 1000; /* 设置层叠顺序，确保它在其他内容之上 */\r\n}\r\n.container {\r\n  width: 80%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n}\r\n\r\n.logo {\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  color: #333333;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.nav img:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.nav button {\r\n  text-decoration: none;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  border: none;\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n.nav button:hover {\r\n  color: #0099ff;\r\n  cursor: pointer;\r\n}\r\n\r\n.profile {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.profile img {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.profile-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.profile-info p {\r\n  font-size: 16px;\r\n  color: #333333;\r\n}\r\n\r\n.profile-info span {\r\n  font-weight: bold;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.tabs button {\r\n  cursor: pointer;\r\n  display: block;\r\n  width: 150px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  border: 1px solid #cccccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.tabs button {\r\n  background-color: #0099ff;\r\n  color: white;\r\n}\r\n.tabs button.cho {\r\n  background-color: #ff00fa;\r\n  color: white;\r\n}\r\n\r\n.tabs button:hover {\r\n  background-color: #0066cc;\r\n}\r\n\r\n.content {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.content img {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.content img:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.upload {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.upload button {\r\n  width: 100px;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: #0099ff;\r\n  color: white;\r\n  font-size: 16px;\r\n}\r\n\r\n.upload button:hover {\r\n  background-color: #0066cc;\r\n}\r\n\r\n.footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n.footer p {\r\n  font-size: 14px;\r\n  color: #999999;\r\n}\r\n\r\n.updata {\r\n  align-items: center;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  width: 100px;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: #0099ff;\r\n  color: white;\r\n  font-size: 16px;\r\n}\r\n\r\n.userimgbox {\r\n  margin-top: 20px;\r\n}\r\n\r\n.imggallery {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n.image-viewer {\r\n  width: 1300px;\r\n  height: 400px;\r\n  margin: auto auto;\r\n  margin-right: 10px;\r\n}\r\n\r\n.image-style{\r\n  width: 300px;\r\n  height: 220px;\r\n  margin-right: 10px;\r\n  object-fit: cover;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  /* 在盒子的顶部添加一个1像素宽的边框，颜色为白色，透明度为50%。 */\r\n  border-left: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  /* 对盒子应用一个模糊半透明的效果，模糊半径为10像素。这样可以创建玻璃模糊的效果，模糊盒子后面的内容。 */\r\n  background: rgba(50, 50, 50, 0.2);\r\n  /* 设置盒子的背景颜色为半透明的深灰色（RGB值为50, 50, 50），透明度为20%。 */\r\n\r\n  /* 设置盒子使用Flexbox布局。 */\r\n  flex-direction: column;\r\n  /* 将Flex容器的主轴方向设置为垂直，使得项目在列方向上排列。 */\r\n  justify-content: center;\r\n  /*  在盒子的垂直方向上居中内容。 */\r\n  align-items: center;\r\n  /* 在盒子的水平方向上居中内容。 */\r\n  border-radius: 10px;\r\n  /* 应用一个10像素的圆角，使得盒子的角变得圆滑。 */\r\n}\r\n\r\n.image-style :hover{\r\n  width: 250px;\r\n  height: 200px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}