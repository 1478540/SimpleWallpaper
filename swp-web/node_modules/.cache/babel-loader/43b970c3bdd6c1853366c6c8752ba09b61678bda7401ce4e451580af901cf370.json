{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'AppPicture',\n  data() {\n    return {\n      name: '',\n      password: '',\n      picture: '',\n      NAME: '',\n      BALANCE: '',\n      USERID: '',\n      PASSWORD: '',\n      pictureid: '',\n      picturename: '',\n      pictureprice: '',\n      picturecreatid: '',\n      picturesrc: '',\n      lastpage: '',\n      isbuyHover: false,\n      iscollectHover: false,\n      isloadHover: false,\n      islikeHover: false\n    };\n  },\n  mounted() {\n    // 在组件加载时自动执行的函数\n    this.NAME = sessionStorage.getItem('NAME');\n    this.USERID = sessionStorage.getItem('USERID');\n    this.BALANCE = sessionStorage.getItem('BALANCE');\n    this.PASSWORD = sessionStorage.getItem('PASSWORD');\n    sessionStorage.setItem('USERCHOSE', 'myup');\n    this.pictureid = this.$route.query.wpid;\n    this.picturesrc = this.$route.query.name;\n    sessionStorage.setItem('SEARCHTYPE', '');\n    this.lastpage = sessionStorage.getItem('LASTURL');\n    console.log(this.NAME);\n    console.log(this.USERID);\n    console.log(this.PASSWORD);\n    console.log(this.BALANCE);\n    console.log(this.$route.query.name);\n    console.log(this.$route.query.wpid);\n    console.log(this.picturesrc);\n    this.postImagePrice();\n  },\n  methods: {\n    togglebuyHover(value) {\n      this.isbuyHover = value;\n    },\n    togglecollectHover(value) {\n      this.iscollectHover = value;\n    },\n    toggleloadHover(value) {\n      this.isloadHover = value;\n    },\n    togglelikeHover(value) {\n      this.islikeHover = value;\n    },\n    getsrc() {\n      return this.picturesrc1;\n    },\n    collectpicture() {\n      let self = this;\n      let mycollect = {\n        vwpId: this.pictureid,\n        userId: this.USERID\n      };\n      this.$axios.post('http://localhost:8090/mycollect/doCollect', mycollect) ////////////////////////////////////登录信息\n      .then(function (response) {\n        let result = response.data;\n        if (result.code === 200) {\n          console.log(\"登录成功！\");\n          console.log(\"返回的数据：\", result.data);\n          console.log(\"总记录数：\", result.total);\n          if (result.data == \"成功收藏\") {\n            alert(\"收藏成功！\");\n            location.reload();\n          } else if (result.data == \"取消收藏\") {\n            alert(\"您已取消收藏\");\n            location.reload();\n          }\n        } else if (result.code === 400) {\n          alert(\"error\");\n          location.reload();\n        }\n      }).catch(function (error) {\n        console.log(\"请求错误：\", error);\n      });\n    },\n    likepicture() {\n      let self = this;\n      let mycollect = {\n        vwpId: this.pictureid,\n        userId: this.USERID\n      };\n      this.$axios.post('http://localhost:8090/myfavourite/doFavourite', mycollect) ////////////////////////////////////登录信息\n      .then(function (response) {\n        let result = response.data;\n        if (result.code === 200) {\n          console.log(\"登录成功！\");\n          console.log(\"返回的数据：\", result.data);\n          console.log(\"总记录数：\", result.total);\n          alert(\"点赞成功！感谢您对该壁纸的支持\");\n          location.reload();\n        } else if (result.code === 400) {\n          console.log(\"返回的数据：\", result);\n          if (result.msg == \"你已经点赞过该壁纸\") {\n            alert(\"你已经点赞过该壁纸！\");\n            location.reload();\n          } else {\n            alert(\"error\");\n            location.reload();\n          }\n        }\n      }).catch(function (error) {\n        console.log(\"请求错误：\", error);\n      });\n    },\n    loadpicture() {\n      let self = this;\n      if (this.picturecreatid == this.USERID) {\n        self.downloadImg();\n      } else {\n        let user = {\n          vwpId: this.pictureid,\n          userId: this.USERID\n        };\n        this.$axios.post('http://localhost:8090/vwpdownload/download', user) ////////////////////////////////////登录信息\n        .then(function (response) {\n          let result = response.data;\n          if (result.code === 200) {\n            console.log(\"登录成功！\");\n            console.log(\"返回的数据：\", result.data);\n            console.log(\"总记录数：\", result.total);\n            self.downloadImg();\n          } else if (result.code === 400) {\n            if (result.msg == \"你还没购买过该壁纸\") {\n              alert(\"您还没购买过该壁纸，无法下载\");\n              location.reload();\n            }\n          }\n        }).catch(function (error) {\n          console.log(\"请求错误：\", error);\n        });\n      }\n    },\n    downloadImg() {\n      let imgname1 = this.picturename;\n      var image = new Image();\n      console.log(this.picturename);\n      // 解决跨域 Canvas 污染问题\n      image.setAttribute(\"crossOrigin\", \"anonymous\");\n\n      // 保存组件实例\n      var vm = this;\n      image.onload = function () {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext(\"2d\");\n        context.drawImage(image, 0, 0, image.width, image.height);\n\n        // 获取原始二进制数据\n        canvas.toBlob(function (blob) {\n          var url = window.URL.createObjectURL(blob); // 创建一个 Blob URL\n          var a = document.createElement(\"a\"); // 生成一个 <a> 元素\n          var event = new MouseEvent(\"click\"); // 创建一个单击事件\n          console.log(vm.picturename); // 使用保存的组件实例\n\n          a.download = imgname1 || \"photo\"; // 设置图片名称\n          a.href = url; // 将生成的 Blob URL 设置为 a.href 属性\n          a.dispatchEvent(event); // 触发 <a> 的单击事件\n\n          // 释放 Blob URL\n          window.URL.revokeObjectURL(url);\n        });\n      };\n      image.src = this.picturesrc;\n    },\n    buypicture() {\n      let user = {\n        vwpId: this.pictureid,\n        orderId: '',\n        buyerId: this.USERID\n      };\n      if (this.BALANCE < this.pictureprice) {\n        alert(\"抱歉，您无法购买此壁纸，因为您的余额不足\");\n        location.reload();\n      }\n      if (this.USERID == this.picturecreatid) {\n        alert(\"抱歉，您无法购买此壁纸，因为您是壁纸的上传者\");\n        location.reload();\n      }\n      let self = this;\n      this.$axios.post('http://localhost:8090/vwporder/purchaseImage', user) ////////////////////////////////////登录信息\n      .then(function (response) {\n        let result = response.data;\n        if (result.code === 200) {\n          console.log(\"登录成功！\");\n          console.log(\"返回的数据：\", result.data);\n          console.log(\"总记录数：\", result.total);\n          sessionStorage.setItem('BALANCE', result.data.balance);\n          alert(\"购买成功！\");\n          location.reload();\n        } else if (result.code === 400) {\n          console.log(\"失败！\");\n          console.log(result);\n          if (result.msg == \"不需要购买!\") {\n            alert(\"该壁纸由创作者免费提供，您无需购买，可直接下载\");\n            location.reload();\n          }\n          if (result.msg == \"不能购买自己上传的壁纸\") {\n            alert(\"您无法购买此壁纸，因为你是此壁纸的上传者\");\n            location.reload();\n          }\n          if (result.msg == \"余额不足\") {\n            alert(\"您无法购买此壁纸，因为您的余额不足\");\n            location.reload();\n          }\n          if (result.msg == \"你已购买过该壁纸\") {\n            alert(\"您无法购买此壁纸，因为您已经购买过该壁纸，可直接下载\");\n            location.reload();\n          }\n        }\n      }).catch(function (error) {\n        console.log(\"请求错误：\", error);\n      });\n    },\n    tolastpage() {\n      let self = this;\n      console.log(this.lastpage);\n      self.$router.push(this.lastpage);\n    },\n    touser() {\n      let self = this;\n      self.$router.push(\"/user\");\n    },\n    toindex() {\n      let self = this;\n      self.$router.push(\"/index\");\n    },\n    toupload() {\n      this.$router.push(\"/upload\");\n    },\n    refresh() {\n      sessionStorage.setItem('SEARCHTYPE', '');\n      location.reload();\n    },\n    async postImagePrice() {\n      let vwallpaper = {\n        vwpId: this.pictureid,\n        name: '',\n        createId: '',\n        price: '',\n        type: '',\n        path: ''\n      };\n      try {\n        //使用axios发送一个GET请求，假设后端有一个接口可以返回图片的文件名\n        let response = await axios.post(\"http://localhost:8090/vwallpaper/getImagesByVwpid\", vwallpaper);\n        //如果请求成功，将文件名保存到imageName属性中\n        if (response.status === 200) {\n          console.log(response.data);\n          console.log(this.imageName);\n          this.picturename = response.data.data[0].name;\n          this.picturecreatid = response.data.data[0].createId;\n          this.pictureprice = response.data.data[0].price;\n        }\n      } catch (error) {\n        //如果请求失败，打印错误信息\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","password","picture","NAME","BALANCE","USERID","PASSWORD","pictureid","picturename","pictureprice","picturecreatid","picturesrc","lastpage","isbuyHover","iscollectHover","isloadHover","islikeHover","mounted","sessionStorage","getItem","setItem","$route","query","wpid","console","log","postImagePrice","methods","togglebuyHover","value","togglecollectHover","toggleloadHover","togglelikeHover","getsrc","picturesrc1","collectpicture","self","mycollect","vwpId","userId","$axios","post","then","response","result","code","total","alert","location","reload","catch","error","likepicture","msg","loadpicture","downloadImg","user","imgname1","image","Image","setAttribute","vm","onload","canvas","document","createElement","width","height","context","getContext","drawImage","toBlob","blob","url","window","URL","createObjectURL","a","event","MouseEvent","download","href","dispatchEvent","revokeObjectURL","src","buypicture","orderId","buyerId","balance","tolastpage","$router","push","touser","toindex","toupload","refresh","vwallpaper","createId","price","type","path","status","imageName"],"sources":["src/components/AppPicture.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <div class=\"logo\">壁纸引擎--壁纸</div>\r\n            <div class=\"nav\">\r\n                <button @click=\"toindex\">首页</button>\r\n                <button @click=\"refresh\">刷新</button>\r\n                <button @click=\"toupload\">上传</button>\r\n                <div class=\"userimgbox\">\r\n                    <img src=\"../assets/bg.jpg\" alt=\"\" width=\"25\" @click=\"touser\">\r\n                    <div style=\" color: #28e1f8;\">{{ this.NAME }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"nav\">\r\n            <button @click=\"tolastpage\"> 《--返回上一页</button>\r\n        </div>\r\n        <div class=\"info\">\r\n            <div>壁纸名称: {{this.picturename}}</div>\r\n            <div>壁纸价格: {{this.pictureprice}}￥</div>\r\n            <div>壁纸创作者: {{this.picturecreatid}}</div>\r\n          <img\r\n              v-bind:src=\"isbuyHover ? require('@/assets/buyhover.png') : require('@/assets/buy.png')\"\r\n              v-on:mouseover=\"togglebuyHover(true)\"\r\n              v-on:mouseout=\"togglebuyHover(false)\"\r\n              width=\"30\" @click=\"buypicture\" title=\"购买\"\r\n          />\r\n          <img\r\n              v-bind:src=\"isloadHover ? require('@/assets/downloadhover.png') : require('@/assets/download.png')\"\r\n              v-on:mouseover=\"toggleloadHover(true)\"\r\n              v-on:mouseout=\"toggleloadHover(false)\"\r\n              width=\"30\" @click=\"loadpicture\" title=\"下载\"\r\n          />\r\n          <img\r\n              v-bind:src=\"islikeHover ? require('@/assets/likehover.png') : require('@/assets/like.png')\"\r\n              v-on:mouseover=\"togglelikeHover(true)\"\r\n              v-on:mouseout=\"togglelikeHover(false)\"\r\n              width=\"30\" @click=\"likepicture\" title=\"点赞\"\r\n          />\r\n          <img\r\n              v-bind:src=\"iscollectHover ? require('@/assets/collecthover.png') : require('@/assets/collect.png')\"\r\n              v-on:mouseover=\"togglecollectHover(true)\"\r\n              v-on:mouseout=\"togglecollectHover(false)\"\r\n              width=\"30\" @click=\"collectpicture\" title=\"收藏\"\r\n          />\r\n        </div>\r\n        <div class=\"image\">\r\n            <img v-if=\"this.$route.query.name\" :src=\"this.$route.query.name\">\r\n        </div>\r\n        <div class=\"footer\">\r\n            <p>© 2023 壁纸引擎. All rights reserved.</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: 'AppPicture',\r\n    data() {\r\n        return {\r\n            name: '',\r\n            password: '',\r\n            picture: '',\r\n            NAME:'',\r\n            BALANCE:'',\r\n            USERID:'',\r\n            PASSWORD:'',\r\n            pictureid:'',\r\n            picturename:'',\r\n            pictureprice:'',\r\n            picturecreatid:'',\r\n            picturesrc:'',\r\n            lastpage:'',\r\n            isbuyHover: false,\r\n            iscollectHover: false,\r\n            isloadHover: false,\r\n            islikeHover: false,\r\n        }\r\n    },\r\n    mounted() {\r\n      // 在组件加载时自动执行的函数\r\n      this.NAME=sessionStorage.getItem('NAME')\r\n      this.USERID=sessionStorage.getItem('USERID')\r\n      this.BALANCE=sessionStorage.getItem('BALANCE')\r\n      this.PASSWORD=sessionStorage.getItem('PASSWORD')\r\n      sessionStorage.setItem('USERCHOSE', 'myup')\r\n      this.pictureid=this.$route.query.wpid;\r\n      this.picturesrc=this.$route.query.name;\r\n      sessionStorage.setItem('SEARCHTYPE', '')\r\n      this.lastpage=sessionStorage.getItem('LASTURL')\r\n      console.log(this.NAME)\r\n      console.log(this.USERID)\r\n      console.log(this.PASSWORD)\r\n      console.log(this.BALANCE)\r\n      console.log(this.$route.query.name)\r\n      console.log(this.$route.query.wpid)\r\n      console.log(this.picturesrc)\r\n\r\n      this.postImagePrice();\r\n    },\r\n    methods: {\r\n      togglebuyHover(value) {\r\n        this.isbuyHover = value;\r\n      },\r\n      togglecollectHover(value) {\r\n        this.iscollectHover = value;\r\n      },\r\n      toggleloadHover(value) {\r\n        this.isloadHover = value;\r\n      },\r\n      togglelikeHover(value) {\r\n        this.islikeHover = value;\r\n      },\r\n      getsrc(){\r\n        return this.picturesrc1;\r\n      },\r\n      collectpicture(){\r\n        let self = this;\r\n          let mycollect = {\r\n            vwpId: this.pictureid,\r\n            userId: this.USERID,\r\n          };\r\n          this.$axios.post('http://localhost:8090/mycollect/doCollect', mycollect)     ////////////////////////////////////登录信息\r\n              .then(function (response) {\r\n                let result = response.data;\r\n                if (result.code === 200) {\r\n                  console.log(\"登录成功！\");\r\n                  console.log(\"返回的数据：\", result.data);\r\n                  console.log(\"总记录数：\", result.total);\r\n                  if(result.data==\"成功收藏\")\r\n                  {\r\n                    alert(\"收藏成功！\");\r\n                    location.reload();\r\n                  }\r\n                  else if(result.data==\"取消收藏\")\r\n                  {\r\n                    alert(\"您已取消收藏\");\r\n                    location.reload();\r\n                  }\r\n\r\n                } else if (result.code === 400) {\r\n                    alert(\"error\");\r\n                    location.reload();\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(\"请求错误：\", error);\r\n              });\r\n      },\r\n      likepicture(){\r\n        let self = this;\r\n        let mycollect = {\r\n          vwpId: this.pictureid,\r\n          userId: this.USERID,\r\n        };\r\n        this.$axios.post('http://localhost:8090/myfavourite/doFavourite', mycollect)     ////////////////////////////////////登录信息\r\n            .then(function (response) {\r\n              let result = response.data;\r\n              if (result.code === 200) {\r\n                console.log(\"登录成功！\");\r\n                console.log(\"返回的数据：\", result.data);\r\n                console.log(\"总记录数：\", result.total);\r\n                alert(\"点赞成功！感谢您对该壁纸的支持\");\r\n                location.reload();\r\n\r\n              } else if (result.code === 400) {\r\n                console.log(\"返回的数据：\", result);\r\n                if (result.msg == \"你已经点赞过该壁纸\") {\r\n                  alert(\"你已经点赞过该壁纸！\");\r\n                  location.reload();\r\n                }\r\n                else{\r\n                  alert(\"error\");\r\n                  location.reload();\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(\"请求错误：\", error);\r\n            });\r\n      },\r\n      loadpicture(){\r\n        let self = this;\r\n        if(this.picturecreatid==this.USERID)\r\n        {self.downloadImg()}\r\n        else\r\n        {\r\n          let user = {\r\n            vwpId: this.pictureid,\r\n            userId: this.USERID,\r\n          };\r\n          this.$axios.post('http://localhost:8090/vwpdownload/download', user)     ////////////////////////////////////登录信息\r\n              .then(function (response) {\r\n                let result = response.data;\r\n                if (result.code === 200) {\r\n                  console.log(\"登录成功！\");\r\n                  console.log(\"返回的数据：\", result.data);\r\n                  console.log(\"总记录数：\", result.total);\r\n                  self.downloadImg();\r\n\r\n                } else if (result.code === 400) {\r\n                  if (result.msg == \"你还没购买过该壁纸\") {\r\n                    alert(\"您还没购买过该壁纸，无法下载\");\r\n                    location.reload();\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(\"请求错误：\", error);\r\n              });\r\n        }\r\n      },\r\n      downloadImg() {\r\n        let imgname1 = this.picturename;\r\n        var image = new Image();\r\n        console.log(this.picturename);\r\n        // 解决跨域 Canvas 污染问题\r\n        image.setAttribute(\"crossOrigin\", \"anonymous\");\r\n\r\n        // 保存组件实例\r\n        var vm = this;\r\n\r\n        image.onload = function () {\r\n          var canvas = document.createElement(\"canvas\");\r\n          canvas.width = image.width;\r\n          canvas.height = image.height;\r\n          var context = canvas.getContext(\"2d\");\r\n          context.drawImage(image, 0, 0, image.width, image.height);\r\n\r\n          // 获取原始二进制数据\r\n          canvas.toBlob(function (blob) {\r\n            var url = window.URL.createObjectURL(blob); // 创建一个 Blob URL\r\n            var a = document.createElement(\"a\"); // 生成一个 <a> 元素\r\n            var event = new MouseEvent(\"click\"); // 创建一个单击事件\r\n            console.log(vm.picturename); // 使用保存的组件实例\r\n\r\n            a.download = imgname1 || \"photo\"; // 设置图片名称\r\n            a.href = url; // 将生成的 Blob URL 设置为 a.href 属性\r\n            a.dispatchEvent(event); // 触发 <a> 的单击事件\r\n\r\n            // 释放 Blob URL\r\n            window.URL.revokeObjectURL(url);\r\n          });\r\n        };\r\n        image.src = this.picturesrc;\r\n      },\r\n      buypicture(){\r\n        let user = {\r\n          vwpId: this.pictureid,\r\n          orderId:'',\r\n          buyerId:this.USERID,\r\n        };\r\n        if(this.BALANCE<this.pictureprice)\r\n        {\r\n          alert(\"抱歉，您无法购买此壁纸，因为您的余额不足\");\r\n          location.reload();\r\n        }\r\n        if(this.USERID==this.picturecreatid)\r\n        {\r\n          alert(\"抱歉，您无法购买此壁纸，因为您是壁纸的上传者\");\r\n          location.reload();\r\n        }\r\n        let self = this;\r\n        this.$axios.post('http://localhost:8090/vwporder/purchaseImage', user)     ////////////////////////////////////登录信息\r\n            .then(function (response) {\r\n              let result = response.data;\r\n              if (result.code === 200) {\r\n                console.log(\"登录成功！\");\r\n                console.log(\"返回的数据：\", result.data);\r\n                console.log(\"总记录数：\", result.total);\r\n                sessionStorage.setItem('BALANCE', result.data.balance)\r\n                alert(\"购买成功！\");\r\n                location.reload();\r\n\r\n              } else if (result.code === 400) {\r\n                console.log(\"失败！\");\r\n                console.log(result);\r\n                if(result.msg == \"不需要购买!\") {\r\n                  alert(\"该壁纸由创作者免费提供，您无需购买，可直接下载\");\r\n                  location.reload();\r\n                }\r\n                if(result.msg == \"不能购买自己上传的壁纸\") {\r\n                  alert(\"您无法购买此壁纸，因为你是此壁纸的上传者\");\r\n                  location.reload();\r\n                }\r\n                if(result.msg == \"余额不足\") {\r\n                  alert(\"您无法购买此壁纸，因为您的余额不足\");\r\n                  location.reload();\r\n                }\r\n                if(result.msg == \"你已购买过该壁纸\") {\r\n                  alert(\"您无法购买此壁纸，因为您已经购买过该壁纸，可直接下载\");\r\n                  location.reload();\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(\"请求错误：\", error);\r\n            });\r\n\r\n      },\r\n        tolastpage(){\r\n          let self = this;\r\n          console.log(this.lastpage);\r\n          self.$router.push(this.lastpage);\r\n        },\r\n        touser() {\r\n            let self = this;\r\n            self.$router.push(\"/user\");\r\n        },\r\n        toindex() {\r\n            let self = this;\r\n            self.$router.push(\"/index\");\r\n        },\r\n        toupload() {\r\n            this.$router.push(\"/upload\");\r\n        },\r\n        refresh() {\r\n          sessionStorage.setItem('SEARCHTYPE', '')\r\n          location.reload();\r\n        },\r\n        async postImagePrice() {\r\n        let vwallpaper = {\r\n\r\n          vwpId:this.pictureid ,\r\n          name:'',\r\n          createId:'',\r\n          price:'',\r\n          type:'',\r\n          path:''\r\n\r\n        };\r\n        try {\r\n          //使用axios发送一个GET请求，假设后端有一个接口可以返回图片的文件名\r\n          let response = await axios.post(\"http://localhost:8090/vwallpaper/getImagesByVwpid\",vwallpaper);\r\n          //如果请求成功，将文件名保存到imageName属性中\r\n          if (response.status === 200) {\r\n            console.log(response.data);\r\n            console.log(this.imageName);\r\n            this.picturename=response.data.data[0].name;\r\n            this.picturecreatid=response.data.data[0].createId;\r\n            this.pictureprice=response.data.data[0].price;\r\n\r\n          }\r\n        } catch (error) {\r\n          //如果请求失败，打印错误信息\r\n          console.error(error);\r\n        }\r\n      },\r\n    }\r\n}\r\n\r\n</script>\r\n    \r\n<style scoped>\r\nbody {\r\n    background-color: #f0f0f0;\r\n    font-family: Arial, sans-serif;\r\n}\r\n\r\n.container {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n}\r\n\r\n.logo {\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    color: #28e1f8;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.nav img:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.nav button {\r\n  text-decoration: none;\r\n  color: #28e1f8;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  border: none;\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n.nav button:hover {\r\n  color: #ff0062;\r\n  cursor: pointer;\r\n}\r\n\r\n.back {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.back a {\r\n    text-decoration: none;\r\n    color: #333333;\r\n    font-size: 16px;\r\n}\r\n\r\n.back a:hover {\r\n    color: #0099ff;\r\n}\r\n\r\n.image {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.image img {\r\n    width: 80%;\r\n    height: auto;\r\n}\r\n\r\n.info {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n    margin-left: 90px;\r\n\r\n  gap: 20px;\r\n  width: 1000px;\r\n  height: 100px;\r\n  margin-right: 10px;\r\n  object-fit: cover;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  /* 在盒子的顶部添加一个1像素宽的边框，颜色为白色，透明度为50%。 */\r\n  border-left: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  /* 对盒子应用一个模糊半透明的效果，模糊半径为10像素。这样可以创建玻璃模糊的效果，模糊盒子后面的内容。 */\r\n  background: rgba(50, 50, 50, 0.2);\r\n  /* 设置盒子的背景颜色为半透明的深灰色（RGB值为50, 50, 50），透明度为20%。 */\r\n\r\n  /* 设置盒子使用Flexbox布局。 */\r\n  /* 将Flex容器的主轴方向设置为垂直，使得项目在列方向上排列。 */\r\n  justify-content: center;\r\n  /*  在盒子的垂直方向上居中内容。 */\r\n  align-items: center;\r\n  /* 在盒子的水平方向上居中内容。 */\r\n  border-radius: 10px;\r\n  /* 应用一个10像素的圆角，使得盒子的角变得圆滑。 */\r\n}\r\n\r\n.info p {\r\n    font-size: 16px;\r\n    color: #333333;\r\n}\r\n\r\n.info button {\r\n    width: 100px;\r\n    height: 40px;\r\n    border: none;\r\n    border-radius: 20px;\r\n    background-color: #0099ff;\r\n    color: white;\r\n    font-size: 16px;\r\n}\r\n.info button:hover {\r\n  background-color: #cc8b00;\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n.info img:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.footer {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 20px;\r\n}\r\n\r\n.footer p {\r\n    font-size: 14px;\r\n    color: #999999;\r\n}\r\n\r\n.userimgbox {\r\n    margin-top: 20px;\r\n}\r\n.userimgbox img{\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n    \r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}